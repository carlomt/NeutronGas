#
# Macro file for the initialization phase of "TestEm6.cc"
#
# Sets some default verbose
# and initializes the graphic.
#
/control/verbose 2
/run/verbose 2

/testem/det/setHeCF4pressure 1 atm
/testem/det/setSizeX  40 cm
/testem/det/setSizeYZ 40 cm
/testem/det/tallyNumber 0

/testem/phys/addPhysics QGSP_BERT_HP_EMY
/testem/phys/addPhysics HPElastic

/tracking/verbose 0
/run/numberOfThreads 1

/run/initialize

/gun/particle neutron
/gun/energy 5 MeV

#
#/run/initialize
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 50 170
#
# Specify zoom value:
/vis/viewer/zoom 1.0
#
# Specify style (surface or wireframe):
/vis/viewer/set/style surface
/vis/viewer/set/hiddenEdge 1
#
# Draw geometry:
/vis/drawVolume
#
# Draw coordinate axes:
/vis/scene/add/axes 0 0 0 5 cm
#
# To get nice view
# Make the "World" box invisible
/vis/geometry/set/visibility World 0 false
#/vis/geometry/set/colour World 0 0 1  1
# "Box2" is transparent blue 
/vis/geometry/set/colour BlackBox 3 1 1 1 .1 #white
/vis/geometry/set/colour Air      2 0 1 1 .3 #cyan
/vis/geometry/set/colour Frame    1 1 0 1 .5 #magenta
/vis/geometry/set/colour Gas      0 1 1 0 .4 #yellow
/vis/geometry/set/colour GEM      0 0 0 1 .6 #blue
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth 
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set e- red
/vis/modeling/trajectories/drawByParticleID-0/set GenericIon gray
/vis/modeling/trajectories/drawByParticleID-0/set gamma green
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush

# /control/execute test-vis.mac